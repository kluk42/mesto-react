{"version":3,"sources":["images/header-logo.svg","images/brush.svg","images/Lid.svg","images/Bin.svg","components/Header/Header.js","utils/Api.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/ImagePopup/ImagePopup.js","components/PopupWithForm/PopupWithForm.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogoPath","alt","api","baseUrl","token","renderLoading","this","_baseUrl","_token","_renderLoading","res","ok","json","Promise","reject","status","fetch","headers","authorization","then","_resultsProcessing","catch","err","console","log","data","_nameKey","_descriptionInput","method","body","JSON","stringify","name","about","card","_cardId","_id","id","link","avatarLink","avatar","loading","document","querySelector","textContent","Card","imgLink","likes","handleCardClicked","lidPath","binPath","onClick","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","isAvatarHovered","setIsAvatarHovered","cards","setCards","useEffect","all","getInitialCards","getUserInfo","initialCards","userData","cardsToSet","map","item","Object","keys","length","cardId","handleMouseEnterAvatar","onMouseEnter","onMouseLeave","brushPath","key","Footer","ImagePopup","isOpen","onClose","type","description","PopupWithForm","title","children","noValidate","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImgPopupOpen","setIsImgPopupOpen","selectedCard","setSelectedCard","closeAllPopups","evt","target","htmlFor","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8957c47b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/brush.34c46850.svg\";","module.exports = __webpack_public_path__ + \"static/media/Lid.026bd200.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bin.949285d4.svg\";","import React from 'react';\r\nimport headerLogoPath from '../../images/header-logo.svg';\r\n\r\nfunction Header () {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={headerLogoPath} alt=\"Mesto-Russia\" className=\"header__logo\"/>\r\n        </header> \r\n    )\r\n}\r\n\r\nexport default Header;","class Api {\r\n    constructor({ baseUrl, token, renderLoading}) {\r\n        this._baseUrl = baseUrl;\r\n        this._token = token;\r\n        this._renderLoading = renderLoading;\r\n    }\r\n\r\n    _resultsProcessing (res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        } else {return Promise.reject(`Ошибка: ${res.status}`)}\r\n    }\r\n\r\n    getInitialCards () {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            headers: {\r\n                authorization: this._token,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getUserInfo () {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            headers: {\r\n                authorization: this._token,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    sendUserInfo(data) {\r\n        this._renderLoading(true);\r\n        this._nameKey = 'name-input';\r\n        this._descriptionInput = 'description-input'\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n        },\r\n            body: JSON.stringify({\r\n            name: data[this._nameKey],\r\n            about: data[this._descriptionInput]\r\n  })\r\n})\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getCardId(card) {\r\n        this._cardId = card._id;\r\n    }\r\n\r\n    deleteCard (id) {\r\n        return fetch(`${this._baseUrl}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'content-type': 'application/json'\r\n            },\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    likeCard (id) {\r\n        return fetch(`${this._baseUrl}cards/likes/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    dislikeCard (id) {\r\n        return fetch(`${this._baseUrl}cards/likes/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    uploadCard (card) {\r\n        this._renderLoading(true);\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    uploadAvatar (avatarLink) {\r\n        this._renderLoading(true);\r\n        return fetch(`${this._baseUrl}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: avatarLink\r\n            })\r\n        })\r\n        .then(res => {\r\n            return this._resultsProcessing(res)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nconst renderLoading = loading => {\r\n    const activePopup = document.querySelector('.popup-opener');\r\n    const button = activePopup.querySelector('.submit-button');\r\n\r\n    button.textContent = loading ? 'Сохранение...' : 'Сохранить';\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/',\r\n    token: '614c831a-d135-4d7c-82ff-12ed74000dec',\r\n    renderLoading: renderLoading\r\n})\r\n\r\nexport default api;","import lidPath from '../../images/Lid.svg';\r\nimport binPath from '../../images/Bin.svg';\r\nimport React from 'react';\r\n\r\nfunction Card ({imgLink, name, likes, handleCardClicked}) {\r\n    return(\r\n        <div className=\"card\">\r\n            <button className=\"delete-button\">\r\n                <img src={lidPath} alt=\"Крышка\" className=\"delete-button__lid\"/>\r\n                <img src={binPath} alt=\"Урна\" className=\"delete-button__bin\"/>\r\n            </button>\r\n            <img src={imgLink} className=\"card__picture\" alt={name} onClick={handleCardClicked}/>\r\n            <div className=\"card__bottom\">\r\n                <p className=\"card__name\">{name}</p>\r\n                <div className=\"like-section\">\r\n                    <button className=\"like-button\" />\r\n                    <p className=\"like-section__likes-counter\">{likes}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useState, useEffect} from 'react';\r\nimport brushPath from '../../images/brush.svg';\r\nimport api from '../../utils/Api.js';\r\nimport Card from '../Card/Card';\r\n\r\nfunction Main ({onEditProfile, onAddPlace, onEditAvatar, handleCardClicked}) {\r\n    const [userName, setUserName] = useState();\r\n    const [userDescription, setUserDescription] = useState();\r\n    const [userAvatar, setUserAvatar] = useState();\r\n    const [isAvatarHovered, setIsAvatarHovered] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            api.getInitialCards(),\r\n            api.getUserInfo()\r\n        ]).then(res => {\r\n            const [initialCards, userData] = res;\r\n            setUserName(userData.name);\r\n            setUserDescription(userData.about);\r\n            setUserAvatar(userData.avatar);\r\n            const cardsToSet = initialCards.map(item => {\r\n                return {\r\n                    imgLink: item.link,\r\n                    name: item.name,\r\n                    likes: Object.keys(item.likes).length,\r\n                    cardId: item._id\r\n                }\r\n            })\r\n            setCards(cardsToSet);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])//Эффект для обработки информации с сервера при загрузке страницы\r\n\r\n/* Функции рендера кнопки на аватарке */\r\n    const handleMouseEnterAvatar = () => {\r\n        setIsAvatarHovered(true);\r\n    }\r\n\r\n    const handleMouseLeaveAvatar = () => {\r\n        setIsAvatarHovered(false);\r\n    }\r\n    \r\n    return (\r\n        <main className=\"content\">\r\n        <section className=\"profile section\">\r\n            <div className=\"profile-avatar\">\r\n                <img \r\n                src={userAvatar} \r\n                alt={userName} \r\n                className=\"profile-avatar__image\"\r\n                onMouseEnter={handleMouseEnterAvatar}\r\n                onMouseLeave={handleMouseLeaveAvatar}\r\n                />\r\n                <img \r\n                    src={brushPath} \r\n                    alt=\"Кисточка\" \r\n                    className={`profile-avatar__brush ${isAvatarHovered && 'profile-avatar__brush_state_visible'}`} \r\n                    onClick={onEditAvatar}\r\n                    onMouseEnter={handleMouseEnterAvatar}\r\n                />\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__info-line\">\r\n                <h2 className=\"profile__name\">{userName}</h2>\r\n                    <button className=\"edit-button profile__edit-button\" onClick={onEditProfile}/>\r\n                </div>\r\n                <p className=\"profile__description\">{userDescription}</p>\r\n            </div>\r\n            <button className=\"add-button profile__add-button\" onClick={onAddPlace}></button>\r\n        </section>\r\n        <section className=\"gallery section\">\r\n            {cards.map(card => <Card key={card.cardId} {...card} handleCardClicked={handleCardClicked}/>)}\r\n        </section>\r\n    </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nconst ImagePopup = ({card, isOpen, onClose}) => {\r\n    return (\r\n        <div className={`popup popup_type_picture ${isOpen && 'popup-opener'}`}>\r\n            <div className=\"popup__envelope\">\r\n                <button className=\"close-button popup__close-button\" type=\"button\" onClick={onClose} />\r\n                <img src={card.imgLink} alt={card.description} className=\"popup__picture\"/>\r\n                <p className=\"popup__sign\">{card.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","import React from 'react';\r\n\r\nconst PopupWithForm = ({title, name, isOpen, onClose, children}) => {\r\n    return (\r\n        <div className={\r\n            `popup popup_type_${name}\r\n             ${isOpen && 'popup-opener'}\r\n    `}>\r\n            <div className=\"popup__window\">\r\n              <h2 className=\"popup__header\">{title}</h2>\r\n              <button className=\"close-button popup__close-button\" type=\"button\" onClick={onClose}/>\r\n              <form className=\"form\" name={name} noValidate>\r\n                    {children}\r\n                    <button className=\"submit-button form__submit-button\" type=\"submit\">Сохранить</button>\r\n              </form>\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useState} from 'react';\r\nimport Header from '../Header/Header.js';\r\nimport Main from '../Main/Main.js';\r\nimport Footer from '../Footer/Footer.js'\r\nimport ImagePopup from '../ImagePopup/ImagePopup.js'\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm.js';\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n    const [isImgPopupOpen, setIsImgPopupOpen] = useState(false);\r\n    const [selectedCard, setSelectedCard] = useState({});\r\n\r\n    const handleEditProfileButton = () => {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    const handleAddPlaceButton = () => {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    const handleEditAvatarButton = () => {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    const closeAllPopups = () => {\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsImgPopupOpen(false);\r\n    }\r\n\r\n    const handleCardClicked = (evt) => {\r\n        const card = {\r\n            imgLink: evt.target.src,\r\n            description: evt.target.alt\r\n        }\r\n        setSelectedCard(card);\r\n        setIsImgPopupOpen(true);\r\n    }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n        <Header />\r\n        <Main\r\n            onEditProfile={handleEditProfileButton}\r\n            onAddPlace={handleAddPlaceButton}\r\n            onEditAvatar={handleEditAvatarButton}\r\n            handleCardClicked={handleCardClicked}\r\n        />\r\n        <Footer />\r\n        <ImagePopup \r\n        card = {selectedCard}\r\n        isOpen = {isImgPopupOpen}\r\n        onClose = {closeAllPopups}\r\n        />\r\n        <PopupWithForm \r\n            title = 'Редактировать профиль'\r\n            name = 'profile'\r\n            isOpen = {isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n        >\r\n            <fieldset className=\"form__input-container\">\r\n                    <label htmlFor=\"name-input\" className=\"form__field\">\r\n                        <input\r\n                            type=\"text\" \r\n                            placeholder=\"Имя пользователя\" \r\n                            id=\"name-input\" \r\n                            className=\"form__item form__item_content_name\" \r\n                            required \r\n                            minLength=\"2\" \r\n                            maxLength=\"40\"\r\n                        />\r\n                        <span id=\"name-input-error\" className=\"form__input-error\"></span>\r\n                    </label>\r\n                    <label htmlFor=\"description-input\" className=\"form__field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Род деятельности\" \r\n                            id=\"description-input\" \r\n                            className=\"form__item form__item_content_description\" \r\n                            required \r\n                            minLength=\"2\" \r\n                            maxLength=\"200\"\r\n                        />\r\n                        <span id=\"description-input-error\" className=\"form__input-error\"></span>\r\n                    </label>\r\n                 </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithForm \r\n            title = 'Новое место'\r\n            name = 'editor'\r\n            isOpen = {isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n                <fieldset className=\"form__input-container\">\r\n                     <label htmlFor=\"place-input\" className=\"form__field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Название\" \r\n                            id=\"place-input\" \r\n                            className=\"form__item form__item_content_place-name\" \r\n                            required \r\n                            minLength=\"1\"\r\n                        />\r\n                        <span id=\"place-input-error\" className=\"form__input-error\"></span>\r\n                     </label>\r\n                     <label htmlFor=\"link-input\" className=\"form__field\">\r\n                        <input \r\n                            type=\"url\" \r\n                            placeholder=\"Ссылка на картинку\" \r\n                            id=\"link-input\" \r\n                            className=\"form__item form__item_content_link\" \r\n                            required\r\n                        />\r\n                        <span id=\"link-input-error\" className=\"form__input-error\"></span>\r\n                     </label>\r\n                 </fieldset>\r\n        </PopupWithForm>\r\n        <PopupWithForm \r\n            title = 'Обновить аватар'\r\n            name = 'avatar'\r\n            isOpen = {isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n                <fieldset className=\"form__input-container\">\r\n                     <label htmlFor=\"avatar-input\" className=\"form__field\">\r\n                        <input \r\n                            type=\"url\" \r\n                            placeholder=\"Ссылка на аватар\" \r\n                            id=\"avatar-input\" \r\n                            className=\"form__item form__item_content_avatar\" \r\n                            required\r\n                        />\r\n                        <span id=\"avatar-input-error\" className=\"form__input-error\"></span>\r\n                     </label>\r\n                 </fieldset>\r\n            </PopupWithForm>\r\n     <div className=\"popup popup_type_confirmation\">\r\n        <div className=\"popup__window\">\r\n            <h2 className=\"popup__header\">Вы уверены?</h2>\r\n            <button className=\"close-button popup__close-button\" type=\"button\"/>\r\n            <form className=\"form\">\r\n                <button className=\"submit-button submit-button_confirmation\" type=\"submit\">Да</button>\r\n             </form>\r\n        </div>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}