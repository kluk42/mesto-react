{"version":3,"sources":["images/header-logo.svg","images/brush.svg","images/Lid.svg","images/Bin.svg","components/Header/Header.js","utils/Api.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/ImagePopup/ImagePopup.jsx","components/PopupWithForm/PopupWithForm.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","headerLogoPath","alt","api","baseUrl","token","renderLoading","this","_baseUrl","_token","_renderLoading","fetch","headers","authorization","then","res","ok","json","Promise","reject","status","cards","catch","err","console","log","data","_nameKey","_descriptionInput","method","body","JSON","stringify","name","about","card","_cardId","_id","id","link","avatarLink","avatar","loading","document","querySelector","textContent","Card","imgLink","likes","handleCardClicked","lidPath","binPath","onClick","Main","onEditProfile","onAddPlace","onEditAvatar","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","isAvatarHovered","setIsAvatarHovered","setCards","useEffect","all","getInitialCards","getUserInfo","initialCards","userData","cardsToSet","map","item","Object","keys","length","cardId","handleMouseEnterAvatar","onMouseEnter","onMouseLeave","brushPath","key","Footer","ImagePopup","isOpen","onClose","type","description","PopupWithForm","title","children","noValidate","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImgPopupOpen","setIsImgPopupOpen","selectedCard","setSelectedCard","closeAllPopups","evt","target","htmlFor","placeholder","required","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0a9151f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header-logo.855a8c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/brush.34c46850.svg\";","module.exports = __webpack_public_path__ + \"static/media/Lid.026bd200.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bin.949285d4.svg\";","import React from 'react';\r\nimport headerLogoPath from '../../images/header-logo.svg';\r\n\r\nfunction Header () {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={headerLogoPath} alt=\"Mesto-Russia\" className=\"header__logo\"/>\r\n        </header> \r\n    )\r\n}\r\n\r\nexport default Header;","class Api {\r\n    constructor({ baseUrl, token, renderLoading}) {\r\n        this._baseUrl = baseUrl;\r\n        this._token = token;\r\n        this._renderLoading = renderLoading;\r\n    }\r\n\r\n    getInitialCards () {\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            headers: {\r\n                authorization: this._token,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            } else {return Promise.reject(`Ошибка: ${res.status}`)}\r\n        })\r\n        .then(cards => {\r\n            return cards\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getUserInfo () {\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            headers: {\r\n                authorization: this._token,\r\n                'content-type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    sendUserInfo(data) {\r\n        this._renderLoading(true);\r\n        this._nameKey = 'name-input';\r\n        this._descriptionInput = 'description-input'\r\n        return fetch(`${this._baseUrl}users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n        },\r\n            body: JSON.stringify({\r\n            name: data[this._nameKey],\r\n            about: data[this._descriptionInput]\r\n  })\r\n})\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    getCardId(card) {\r\n        this._cardId = card._id;\r\n    }\r\n\r\n    deleteCard (id) {\r\n        return fetch(`${this._baseUrl}cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'content-type': 'application/json'\r\n            },\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    likeCard (id) {\r\n        return fetch(`${this._baseUrl}cards/likes/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    dislikeCard (id) {\r\n        return fetch(`${this._baseUrl}cards/likes/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    uploadCard (card) {\r\n        this._renderLoading(true);\r\n        return fetch(`${this._baseUrl}cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: card.name,\r\n                link: card.link\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    uploadAvatar (avatarLink) {\r\n        this._renderLoading(true);\r\n        return fetch(`${this._baseUrl}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: avatarLink\r\n            })\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n            return Promise.reject(`Ошибка: ${res.status}`)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\nconst renderLoading = loading => {\r\n    const activePopup = document.querySelector('.popup-opener');\r\n    const button = activePopup.querySelector('.submit-button');\r\n\r\n    button.textContent = loading ? 'Сохранение...' : 'Сохранить';\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14/',\r\n    token: '614c831a-d135-4d7c-82ff-12ed74000dec',\r\n    renderLoading: renderLoading\r\n})\r\n\r\nexport default api;","import lidPath from '../../images/Lid.svg';\r\nimport binPath from '../../images/Bin.svg';\r\nimport React from 'react';\r\n\r\nfunction Card ({imgLink, name, likes, handleCardClicked}) {\r\n    return(\r\n        <div className=\"card\">\r\n            <button className=\"delete-button\">\r\n                <img src={lidPath} alt=\"Крышка\" className=\"delete-button__lid\"/>\r\n                <img src={binPath} alt=\"Урна\" className=\"delete-button__bin\"/>\r\n            </button>\r\n            <img src={imgLink} className=\"card__picture\" alt={name} onClick={handleCardClicked}/>\r\n            <div className=\"card__bottom\">\r\n                <p className=\"card__name\">{name}</p>\r\n                <div className=\"like-section\">\r\n                    <button className=\"like-button\"></button>\r\n    <p className=\"like-section__likes-counter\">{likes}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React, {useState, useEffect} from 'react';\r\nimport brushPath from '../../images/brush.svg';\r\nimport api from '../../utils/Api';\r\nimport Card from '../Card/Card';\r\n\r\nfunction Main ({onEditProfile, onAddPlace, onEditAvatar, handleCardClicked}) {\r\n    const [userName, setUserName] = useState();\r\n    const [userDescription, setUserDescription] = useState();\r\n    const [userAvatar, setUserAvatar] = useState();\r\n    const [isAvatarHovered, setIsAvatarHovered] = useState(false);\r\n    const [cards, setCards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Promise.all([\r\n            api.getInitialCards(),\r\n            api.getUserInfo()\r\n        ]).then(res => {\r\n            const [initialCards, userData] = res;\r\n            setUserName(userData.name);\r\n            setUserDescription(userData.about);\r\n            setUserAvatar(userData.avatar);\r\n            const cardsToSet = initialCards.map(item => {\r\n                const card = {\r\n                    imgLink: item.link,\r\n                    name: item.name,\r\n                    likes: Object.keys(item.likes).length,\r\n                    cardId: item._id\r\n                }\r\n                return card\r\n            })\r\n            setCards(cardsToSet);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])//Эффект для обработки информации с сервера при загрузке страницы\r\n\r\n/* Функции рендера кнопки на аватарке */\r\n    const handleMouseEnterAvatar = () => {\r\n        setIsAvatarHovered(true);\r\n    }\r\n\r\n    const handleMouseLeaveAvatar = () => {\r\n        setIsAvatarHovered(false);\r\n    }\r\n    \r\n    return (\r\n        <main className=\"content\">\r\n        <section className=\"profile section\">\r\n            <div className=\"profile-avatar\">\r\n                <img \r\n                src={userAvatar} \r\n                alt={userName} \r\n                className=\"profile-avatar__image\"\r\n                onMouseEnter={handleMouseEnterAvatar}\r\n                onMouseLeave={handleMouseLeaveAvatar}\r\n                />\r\n                <img \r\n                    src={brushPath} \r\n                    alt=\"Кисточка\" \r\n                    className={`profile-avatar__brush ${isAvatarHovered && 'profile-avatar__brush_state_visible'}`} \r\n                    onClick={onEditAvatar}\r\n                    onMouseEnter={handleMouseEnterAvatar}\r\n                />\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <div className=\"profile__info-line\">\r\n                <h2 className=\"profile__name\">{userName}</h2>\r\n                    <button className=\"edit-button profile__edit-button\" onClick={onEditProfile}></button>\r\n                </div>\r\n                <p className=\"profile__description\">{userDescription}</p>\r\n            </div>\r\n            <button className=\"add-button profile__add-button\" onClick={onAddPlace}></button>\r\n        </section>\r\n        <section className=\"gallery section\">\r\n            {cards.map(card => <Card key={card.cardId} {...card} handleCardClicked={handleCardClicked}/>)}\r\n        </section>\r\n    </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer () {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\n\r\nconst ImagePopup = ({card, isOpen, onClose}) => {\r\n    return (\r\n        <div className={\r\n            `popup popup_type_picture \r\n             ${isOpen && 'popup-opener'}\r\n            `}>\r\n            <div className=\"popup__envelope\">\r\n                <button className=\"close-button popup__close-button\" type=\"button\" onClick={onClose}></button>\r\n                <img src={card.imgLink} alt={card.description} className=\"popup__picture\"/>\r\n        <p className=\"popup__sign\">{card.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup","import React from 'react';\r\n\r\nconst PopupWithForm = ({title, name, isOpen, onClose, children}) => {\r\n    return (\r\n        <div className={\r\n            `popup popup_type_${name}\r\n             ${isOpen && 'popup-opener'}\r\n    `}>\r\n            <div className=\"popup__window\">\r\n              <h2 className=\"popup__header\">{title}</h2>\r\n              <button className=\"close-button popup__close-button\" type=\"button\" onClick={onClose}></button>\r\n              <form className=\"form\" name={name} noValidate>\r\n                    {children}\r\n                    <button className=\"submit-button form__submit-button\" type=\"submit\">Сохранить</button>\r\n              </form>\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default PopupWithForm;","import React, {useState} from 'react';\nimport Header from '../Header/Header.js';\nimport Main from '../Main/Main.js';\nimport Footer from '../Footer/Footer.js'\nimport ImagePopup from '../ImagePopup/ImagePopup'\nimport '../../index.css';\nimport PopupWithForm from '../PopupWithForm/PopupWithForm.js';\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isImgPopupOpen, setIsImgPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n\n    const handleEditProfileButton = () => {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    const handleAddPlaceButton = () => {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    const handleEditAvatarButton = () => {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    const closeAllPopups = () => {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setIsImgPopupOpen(false);\n    }\n\n    const handleCardClicked = (evt) => {\n        const card = {\n            imgLink: evt.target.src,\n            description: evt.target.alt\n        }\n        setSelectedCard(card);\n        setIsImgPopupOpen(true);\n    }\n\n  return (\n    <div className=\"root\">\n        <Header />\n        <Main\n            onEditProfile={handleEditProfileButton}\n            onAddPlace={handleAddPlaceButton}\n            onEditAvatar={handleEditAvatarButton}\n            handleCardClicked={handleCardClicked}\n        />\n        <Footer />\n        <ImagePopup \n        card = {selectedCard}\n        isOpen = {isImgPopupOpen}\n        onClose = {closeAllPopups}\n        />\n        <PopupWithForm \n            title = 'Редактировать профиль'\n            name = 'profile'\n            isOpen = {isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n        >\n            <fieldset className=\"form__input-container\">\n                    <label htmlFor=\"name-input\" className=\"form__field\">\n                        <input type=\"text\" placeholder=\"Имя пользователя\" id=\"name-input\" className=\"form__item form__item_content_name\" required minLength=\"2\" maxLength=\"40\"/>\n                        <span id=\"name-input-error\" className=\"form__input-error\"></span>\n                    </label>\n                    <label htmlFor=\"description-input\" className=\"form__field\">\n                        <input type=\"text\" placeholder=\"Род деятельности\" id=\"description-input\" className=\"form__item form__item_content_description\" required minLength=\"2\" maxLength=\"200\"/>\n                        <span id=\"description-input-error\" className=\"form__input-error\"></span>\n                    </label>\n                 </fieldset>\n        </PopupWithForm>\n        <PopupWithForm \n            title = 'Новое место'\n            name = 'editor'\n            isOpen = {isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            >\n                <fieldset className=\"form__input-container\">\n                     <label htmlFor=\"place-input\" className=\"form__field\">\n                        <input type=\"text\" placeholder=\"Название\" id=\"place-input\" className=\"form__item form__item_content_place-name\" required minLength=\"1\"/>\n                        <span id=\"place-input-error\" className=\"form__input-error\"></span>\n                     </label>\n                     <label htmlFor=\"link-input\" className=\"form__field\">\n                        <input type=\"url\" placeholder=\"Ссылка на картинку\" id=\"link-input\" className=\"form__item form__item_content_link\" required/>\n                        <span id=\"link-input-error\" className=\"form__input-error\"></span>\n                     </label>\n                 </fieldset>\n        </PopupWithForm>\n        <PopupWithForm \n            title = 'Обновить аватар'\n            name = 'avatar'\n            isOpen = {isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            >\n                <fieldset className=\"form__input-container\">\n                     <label htmlFor=\"avatar-input\" className=\"form__field\">\n                        <input type=\"url\" placeholder=\"Ссылка на аватар\" id=\"avatar-input\" className=\"form__item form__item_content_avatar\" required/>\n                        <span id=\"avatar-input-error\" className=\"form__input-error\"></span>\n                     </label>\n                 </fieldset>\n            </PopupWithForm>\n     <div className=\"popup popup_type_confirmation\">\n        <div className=\"popup__window\">\n            <h2 className=\"popup__header\">Вы уверены?</h2>\n            <button className=\"close-button popup__close-button\" type=\"button\"></button>\n            <form className=\"form\">\n                <button className=\"submit-button submit-button_confirmation\" type=\"submit\">Да</button>\n             </form>\n        </div>\n     </div>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}